{
  "name": "chario",
  "version": "1.0.0",
  "description": "medical rides, simplified. Uber-style app for non-emergency transport: patients schedule trips a week ahead, insurance is auto-verified or card-paid, drivers get guaranteed pickups, and everyone tracks status in real time. Affordable, transparent, and built for healthcare logistics.",
  "main": "index.js",
  "scripts": {
    "test": "node -e \"const { execSync } = require('child_process'); if (!process.env.DATABASE_URL) { console.log('Skipping DB tests: DATABASE_URL not set'); process.exit(0); } try { execSync('pg_isready -d ' + process.env.DATABASE_URL, { stdio: 'ignore' }); } catch (e) { console.log('Skipping DB tests: Postgres is not available'); process.exit(0); }\" && jest",
    "test:coverage": "cross-env NODE_ENV=test jest --coverage --runInBand --coverageReporters=lcov --coverageReporters=json-summary",
    "start": "node index.js",
    "lint": "ESLINT_USE_FLAT_CONFIG=true eslint . --ignore-pattern \"coverage/**\"",
    "prepare": "husky install",
    "test:ci": "jest --coverage --coverageReporters=text --coverageReporters=lcov --coverageReporters=json-summary && npx --yes make-coverage-badge --report-path coverage/coverage-summary.json --output-path coverage.svg",
    "migrate": "node scripts/migrate.js",
    "seed": "node seed.js",
    "backfill:encryption": "node scripts/backfill-encryption.js",
    "cron:reconcile": "node scripts/reconcile.js",
    "worker:payouts": "node src/workers/payout.worker.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "@aws-sdk/client-ssm": "^3.828.0",
    "@opentelemetry/auto-instrumentations-node": "^0.57.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.57.0",
    "@opentelemetry/sdk-node": "^0.57.0",
    "@prisma/client": "^6.9.0",
    "@prisma/instrumentation": "^6.9.0",
    "aws-sdk": "^2.1692.0",
    "basic-auth": "^2.0.1",
    "bcryptjs": "^2.4.3",
    "bullmq": "^4.10.3",
    "connect-static": "^1.6.0",
    "dotenv": "^16.4.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.0",
    "helmet": "^8.1.0",
    "ioredis": "^5.3.2",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.1.0",
    "pg": "^8.16.0",
    "pino": "^9.7.0",
    "pino-http": "^10.5.0",
    "pino-pretty": "^13.0.0",
    "prom-client": "^15.1.3",
    "react-feather": "^2.0.10",
    "redlock": "^4.2.0",
    "socket.io": "^4.7.2",
    "stripe": "^12.0.0",
    "twilio": "^4.16.0",
    "zod": "^3.23.8"
  },
  "overrides": {
    "debug": "^4.4.1"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.27.2",
    "@babel/preset-react": "^7.27.1",
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.1.3",
    "@tailwindcss/typography": "^0.5.10",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "axe-core": "^4.10.3",
    "babel-jest": "^30.0.0",
    "cross-env": "^7.0.3",
    "daisyui": "^5.0.43",
    "dotenv-safe": "^9.1.0",
    "eslint": "^8.57.1",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.13.3",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.4.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-testing-library": "^7.5.2",
    "framer-motion": "^12.18.1",
    "husky": "^9.0.11",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "lint-staged": "^15.2.0",
    "make-coverage-badge": "^1.2.0",
    "nock": "^13.5.0",
    "prettier": "^3.2.5",
    "prisma": "^6.9.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-spring-bottom-sheet": "^3.4.1",
    "react-toastify": "^11.0.5",
    "supertest": "^6.3.3",
    "tailwindcss": "^4.1.10"
  },
  "jest": {
    "setupFiles": [
      "<rootDir>/tests/jest.setup.js"
    ],
    "globalSetup": "<rootDir>/tests/globalSetup.js",
    "moduleNameMapper": {
      "\\.css$": "identity-obj-proxy"
    },
    "coveragePathIgnorePatterns": [
      "<rootDir>/src/app.js"
    ],
    "coverageThreshold": {
      "global": {
        "lines": 80
      }
    }
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
