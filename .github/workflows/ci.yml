name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'postgresql://testuser:testpass@localhost:5432/testdb'
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: docker-compose -f docker-compose.test.yml up -d db
      - name: Wait for DB
        run: |
          for i in {1..10}; do
            if docker-compose -f docker-compose.test.yml exec -T db pg_isready -U testuser; then
              exit 0
            fi
            sleep 3
          done
          docker-compose -f docker-compose.test.yml logs db
          exit 1
      - run: npm ci
      - name: Security audit
        run: npm audit --production --json | node .github/scripts/npm-audit-gate.js
      - run: npx markdown-lint docs/**/*.md
      - run: npx prisma migrate deploy
      - name: Run tests with coverage
        run: npm run test:coverage -- --coverageThreshold='{"global":{"branches":80,"functions":85,"lines":85,"statements":85}}'
      - run: bash .github/scripts/coverage-gate.sh
      - run: docker-compose -f docker-compose.test.yml down
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true
      - uses: github/codeql-action/analyze@v3
      - name: TruffleHog scan
        if: github.event_name == 'push'
        uses: trufflesecurity/trufflehog@v3.89.1
        with:
          path: '.'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && secrets.FLY_API_TOKEN != ''
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --remote-only"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
